<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAFukAAEJdqwAAAAAAAAAAAAAAAAAAAAAAAAAH/mQAAAAF+iAAAAAAAAAAAAAAAAAAAA
        AAAAAL6oAAAAAE/gQAAAAAAAAAAAAAAAAAAAAAAAAP6gAAAAANfoQAAAAAAAAAAAAAAAAAAAAAAAAO6j
        DDDDDFfgwAAAAAAAAAAAAAAAAAAAAAABF/rvvvvvvrvriwAAAAAAAAAAAAAAAAAAAAAAvvvvvvvvvvvv
        qiAAAAAAAAAAAAAAAAAAAAAFPvvvvvx0vvvvqqAAAAAAAAAAAAAAAAAAAAAFPvvvrgAFNvvvqqAAAAAA
        AAAAAAAAAAAAAAAFPvvvugAEHvvvqqAAAAAAAAAAAAAAAAAAAAAFPvvvrpQJ/vvvqqAAAAAAAAAAAAAA
        AAAAAAAFvvvvvgwP/vvvuoAAAAAAAAAAAAAAAAAAAAAANvvvvqxdvvvvuwAAAAAAAAAAAAAAAAAAAAAA
        M/vvvvvvvvvvsQAAAAAAAAAAAAAAAAAAAAAAEFvvvvvvvvvvwAAAAAAAAAAAAAAAAAAAAAAAAAA9svvu
        susQAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMMMEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/EABwRAAICAwEB
        AAAAAAAAAAAAAAFAETAAECBQgP/aAAgBAwEBPxD53jcZHgzk5OiHR0NFsUBwUBwUBwUBuLI8Quzk5PJc
        NBcPA4Lp0OS6dDkunssCwszVLc0E/F//xAAXEQEAAwAAAAAAAAAAAAAAAAABUICQ/9oACAECAQE/ENKm
        Ebhf/8QALBABAAECAwcEAgIDAAAAAAAAAREAMSFRYTBBUHGhwfAQgZGxIPFA0WCg4f/aAAgBAQABPxD/
        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
</value>
  </data>
</root>